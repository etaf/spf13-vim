if count(g:spf13_bundle_groups, 'youcompleteme')
    let g:ycm_complete_in_comments = 1  "在注释输入中也能补全
    let g:ycm_complete_in_strings = 1   "在字符串输入中也能补全
    "let g:ycm_collect_identifiers_from_comments_and_strings = 1   "注释和字符串中的文字也会被收入补全
    "let g:ycm_seed_identifiers_with_syntax=1   "语言关键字补全, 不过python关键字都很短，所以，需要的自己打开
    "let g:ycm_collect_identifiers_from_tags_files = 1
    " 引入，可以补全系统，以及python的第三方包
    let g:ycm_global_ycm_extra_conf = "~/.vim/bundle/YouCompleteMe/cpp/ycm/.ycm_extra_conf.py"
    " 直接触发自动补全
    let g:ycm_key_invoke_completion = '<C-Space>'

endif

" 快速去行尾空格 [, + <Space>]
Bundle 'bronson/vim-trailing-whitespace'

Bundle 'Raimondi/delimitMate'

" Bundle 'vim-scripts/vim-auto-save'
let g:auto_save = 1
let g:airline#extensions#tabline#enabled = 1

Bundle 'kien/rainbow_parentheses.vim'
let g:rbpt_colorpairs = [
    \ ['brown',       'RoyalBlue3'],
    \ ['Darkblue',    'SeaGreen3'],
    \ ['darkgray',    'DarkOrchid3'],
    \ ['darkgreen',   'firebrick3'],
    \ ['darkcyan',    'RoyalBlue3'],
    \ ['darkred',     'SeaGreen3'],
    \ ['darkmagenta', 'DarkOrchid3'],
    \ ['brown',       'firebrick3'],
    \ ['gray',        'RoyalBlue3'],
    \ ['black',       'SeaGreen3'],
    \ ['darkmagenta', 'DarkOrchid3'],
    \ ['Darkblue',    'firebrick3'],
    \ ['darkgreen',   'RoyalBlue3'],
    \ ['darkcyan',    'SeaGreen3'],
    \ ['darkred',     'DarkOrchid3'],
    \ ['red',         'firebrick3'],
    \ ]
let g:rbpt_max = 40
let g:rbpt_loadcmd_toggle = 0
au VimEnter * RainbowParenthesesToggle
au Syntax * RainbowParenthesesLoadRound
au Syntax * RainbowParenthesesLoadSquare
au Syntax * RainbowParenthesesLoadBraces

"Bundle 'LaTeX-Box-Team/LaTeX-Box'

"Bundle 'vim-latex-live-preview'

Bundle 'etaf/cscope_maps.vim'
"Bundle 'brookhong/cscope.vim'
"Bundle 'vim-scripts/awk-support.vim'
"Bundle 'vim-scripts/awk.vim'
"Bundle 'szw/vim-tags'
"Bundle 'xolox/vim-misc'
"Bundle 'xolox/vim-easytags'
Bundle 'jeffkreeftmeijer/vim-numbertoggle'
